from itertools import chain, groupby

norm_entry_data = [('Norm_61', 1), ('Norm_61', 3), ('Norm_61', 7), ('Norm_62', 15), ('Norm_62', 17), ('Norm_63', 23),
                   ('Norm_61', 25), ('Norm_61', 34), ('Norm_61', 35), ('Norm_61', 36), ('Norm_61', 37), ('Norm_61', 38),
                   ('Norm_61', 42), ('Norm_61', 45), ('Norm_61', 46), ('Norm_61', 49), ('Norm_61', 50), ('Norm_61', 63),
                   ('Norm_61', 64), ('Norm_61', 66), ('Norm_61', 68), ('Norm_61', 70), ('Norm_61', 72), ('Norm_61', 77),
                   ('Norm_61', 78), ('Norm_61', 85), ('Norm_61', 88), ('Norm_61', 91), ('Norm_61', 95), ('Norm_61', 96),
                   ('Norm_61', 97), ('Norm_61', 99)]
table_req_rows = {}  # {tableName: [[init_id, req_row, DATA], ..]}
counter = 0
for norm_entry in norm_entry_data:
    if not table_req_rows.get(norm_entry[0]):
        table_req_rows[norm_entry[0]] = []
    table_req_rows[norm_entry[0]].append([counter, norm_entry[1], None])
    counter += 1

# table_req_rows = {table: [(init_id, req_row) for _, (init_id, req_row) in entries] for table, entries in groupby(sorted(norm_entry_data, key=lambda x: x[0]), key=lambda x: x[0])}
print(table_req_rows)

first_table = table_req_rows[list(table_req_rows.keys())[0]]
print(first_table)
print([r[1] for r in first_table])
print(zip(first_table, ["data" for i in first_table]))


# nested_cols = [7, 8, 9]
# rez = [(2, 'РХБЗ', 'Тепловая машина специальной обработки', 'ТМС-65У', 'КАМАЗ-6520-90 (5P) на КПГ', 'ЯМЗ-238', 'Авиационный турборекактивный двигатель М 701с-500', 25, None, None), (3, 'РХБЗ', 'Тепловая машина специальной обработки', 'ТМС-65У', 'КАМАЗ-53605-37 на КПГ', 'ЯМЗ-238', 'Привод от коробки отбора мощности', 66, None, None), (4, 'РХБЗ', 'Универсальная тепловая машина', 'УТМ-85М', 'КАМАЗ-4308-81(N5) на КПГ', 'КамАЗ-7403.10', 'Посейдон 150-200-15', 77, None, None), (5, 'РХБЗ', 'Универсальная тепловая машина', 'УТМ-85М', 'КАМАЗ-65117-37 на КПГ', 'КамАЗ-7403.10', '5-П-27.5-ВМ1', 38, None, None), (6, 'РХБЗ', 'Универсальная тепловая машина', 'УТМ-85М', 'КАМАЗ-6560-53', 'КамАЗ-7403.10', 'Вепрь', 63, None, None), (7, 'РХБЗ', 'Авторазливочная станция', 'АРС-15', 'КАМАЗ-6540-48 (А5)', '-', 'ЗиЛ-375', 95, None, None), (8, 'РХБЗ', 'Авторазливочная станция', 'АРС-15', 'КАМАЗ-65115-37 на КПГ', '-', 'подогреватель ЛО-36.02.02.000', 49, None, None), (9, 'РХБЗ', 'Авторазливочная станция', 'АРС-14К', 'КАМАЗ-6520-53', '-', 'ЯМЗ-747', 17, None, None), (10, 'РХБЗ', 'Авторазливочная станция', 'АРС-14', 'КАМАЗ-4308-81(N5) на КПГ', '-', 'ЗиЛ-131', 66, None, None), (11, 'РХБЗ', 'Авторазливочная станция', 'АРС-14КМ', 'КАМАЗ-65224-53', 'КамАЗ-740.260', 'Подогрев раствора', 70, None, None), (12, 'РХБЗ', 'Авторазливочная станция', 'АРС-14КМ', 'КАМАЗ-65222-38 на КПГ', 'КамАЗ-740.260', 'Вал отбора мощности', 45, None, None), (13, 'РХБЗ', 'Авторазливочная станция', 'АРС-14КМ', 'КАМАЗ-65201-53', 'КамАЗ-7403.10', 'Нагрев воды', 68, None, None), (14, 'РХБЗ', 'Авторазливочная станция', 'АРС-14КМ', 'КАМАЗ-6520-90 (5P) на СПГ', 'КамАЗ-7403.10', 'Работа дымогенератора', 25, None, None), (15, 'РХБЗ', 'Авторазливочная станция', 'АРС-14КМ', 'КАМАЗ-65115-37 на КПГ', 'КамАЗ-7403.10', 'Работа водяного насоса', 50, None, None), (16, 'РХБЗ', 'Авторазливочная станция', 'АРС-14У', 'КАМАЗ-53605-37 на КПГ', '-', 'ЯМЗ-238-М2-43', 35, None, None), (17, 'РХБЗ', 'Дымовая машина', 'ТДА-2М', 'КАМАЗ-65115-37 на КПГ', '-', 'ЯМЗ-747', 70, None, None), (18, 'РХБЗ', 'Дымовая машина', 'ТДА-2М', 'КАМАЗ-43118-37 на CПГ', '-', 'Камера сгорания', 25, None, None), (19, 'РХБЗ', 'Дымовая машина', 'ТДА-3', 'КАМАЗ-65221-53', 'КамАЗ-470.30-260', 'Двигатель ТА-6 (ГТГ)', 88, None, None), (20, 'РХБЗ', 'Аэрозольный генератор', 'АГП', 'КАМАЗ-43253-69 (G5)', '-', 'Камера сгорания', 66, None, None), (21, 'РХБЗ', 'Аэрозольный генератор', 'АГП', 'КАМАЗ-4308-81(N5) на КПГ', '-', 'Испаритель', 45, None, None), (22, 'РХБЗ', 'Комплекс дистанционного управления аэрозольным противодействием', 'КДУД', 'КАМАЗ-65224-53', 'КамАЗ 740.60-360', 'Yanmar 4TNV84T', 36, None, None), (23, 'РХБЗ', 'Универсальная станция тепловой обработки', 'УССО', 'КАМАЗ-43118-50', 'КамАЗ-740.50-360', 'ММЗ Д243-449А', 99, None, None), (24, 'РХБЗ', 'Универсальная станция тепловой обработки', 'УССО', 'КАМАЗ-65115-37 на КПГ', 'КамАЗ-740.50-360', 'L48N 5/6-G(E)Y', 64, None, None), (25, 'РХБЗ', 'Универсальная станция тепловой обработки', 'УССО', 'КАМАЗ-53605-48 (A5)', 'КамАЗ-740.50-360', 'L48N6-PYST', 99, None, None), (26, 'РХБЗ', 'Комплекс мобильный модульный пенный', 'КММП', 'КАМАЗ-5308-48 (A5)', 'КамАЗ-740.30-260', 'Yanmar 3TNV76H6EP', 97, None, None), (27, 'РХБЗ', 'Комплекс подвижный робототехнический', 'КПР', 'КАМАЗ-43118-37 на CПГ', 'КамАЗ-740.31', '15LD 500/B1', 46, None, None), (28, 'РХБЗ', 'Боевая машина', 'БМ-1 ТОС-1А', 'КАМАЗ-43118-37 на CПГ', '-', 'В-84', 78, None, None), (29, 'РХБЗ', 'Машина радиационной, химической и биологической защиты', 'БРДМ-2рхб', 'КАМАЗ-43253-69 (G5)', 'ГАЗ-41', 'ГАЗ-41', 72, None, None), (30, 'РХБЗ', 'Специальное оборудование установленное на разведовательной машине', 'УМЗ-451', 'КАМАЗ-43253-69 (G5)', '-', '-', 25, None, None), (31, 'РХБЗ', 'Расчётно-аналитичская группа', 'РАГ-3У', 'КАМАЗ-43253-69 (G5)', 'ЯМЗ-236', 'АД3-Т400-ВМ1 (ВСН-7Д)', 37, None, None), (32, 'РХБЗ', 'Автомобильная радиометрическая и химическая лаборотория', 'АЛ-4К', 'КАМАЗ-43502-66 (D5)', 'КамАЗ-740.31-240', 'ТМЗ-450/Д90', 96, None, None), (33, 'РХБЗ', 'Передвижная мастерская радиационной, химической и биологической защиты', 'ПМ РХБЗ-1', 'КАМАЗ-4308-69 (G5)', 'КамАЗ-740.31-240', 'ТСС-186', 1, None, None), (34, 'РХБЗ', 'Транспортнозаряжающая машина', 'ТЗМ-Т', 'КАМАЗ-43255-69 (G5)', '-', 'Двигатель В-84', 1, None, None), (35, 'РХБЗ', 'Комплекс', 'УКСОД-Т', 'КАМАЗ-4308-81(N5) на КПГ', 'ЯМЗ-5347-10', 'HATZ 1D50 (АД-4-П28.5-ЗВМЗ)', 42, None, None), (36, 'РХБЗ', 'Пункт контрольно-распределительный подвижный', 'КРПП-У', 'КАМАЗ-5308-48 (A5)', 'ЯМЗ-236', '2СД-М1 (АБ 1-0/230)', 23, None, None), (37, 'РХБЗ', 'Разведовательная поисковая машина', 'РПМ-2', 'КАМАЗ-65201-53', '-', 'КамАЗ-7403.10', 91, None, None), (38, 'РХБЗ', 'Многофункциональный модульный мобильный комплекс анализа патогенных биологических агентов', 'МКА ПБА', 'КАМАЗ-63501-52', 'КамАЗ-740.50-360', 'Europover New boy, серии EPS103DE', 15, None, None), (39, 'РХБЗ', 'Многофункциональный модульный мобильный комплекс анализа патогенных биологических агентов', 'МКА ПБА', 'КАМАЗ-65222-38 на КПГ', 'КамАЗ-740.50-360', 'Europover New boy, серии EPS20', 85, None, None), (40, 'РХБЗ', 'Многофункциональный модульный мобильный комплекс анализа патогенных биологических агентов', 'МКА ПБА', 'КАМАЗ-65201-53', 'ISF2 854129P', 'Yanmar, серии L100NSEAICIJA51', 64, None, None), (41, 'РХБЗ', 'Многофункциональный модульный мобильный комплекс анализа патогенных биологических агентов', 'МКА ПБА', 'КАМАЗ-65224-53', 'КамАЗ-740.50-360', 'Europover New boy, серии EPS103DE', 96, None, None), (42, 'РХБЗ', 'Комплекс дезинфекции аэрозольный', 'КДА', 'КАМАЗ-5350-66 (D5)', 'КамАЗ-740.300', 'Двигатель Yanmar, серии 3TNV70-HE (АДА10-230РЯ2)', 7, None, None), (43, 'РХБЗ', 'Комплекс дезинфекции аэрозольный', 'КДА', 'КАМАЗ-43502-66 (D5)', 'КамАЗ-740.300', 'Двигатель Lambardini, серии LDW 702/B1 (АДА10-Т400РЛ2)', 63, None, None), (44, 'РХБЗ', 'Комплекс дезинфекции аэрозольный', 'КДА', 'КАМАЗ-5350-37 на КПГ', 'КамАЗ-740.300', 'Двигатель Yanmar, серии L48N6CFITIAA', 88, None, None), (45, 'РХБЗ', 'Комплекс дезинфекции аэрозольный', 'КДА', 'КАМАЗ-5308-48 (A5)', 'КамАЗ-740.300', 'Двигатель Yanmar, серии 3TNV70-HE (АДА10-230РЯ2)', 72, None, None), (46, 'РХБЗ', 'Комплекс дезинфекции аэрозольный', 'КДА', 'КАМАЗ-65222-38 на КПГ', 'КамАЗ-740.300', 'Двигатель Yanmar, серии L48N6CFITIAA', 34, None, None), (47, 'РХБЗ', 'Машина радиационной, химической и биологической разведки', 'РХМ-4', 'КАМАЗ-6520-90 (5P) на СПГ', '-', 'КамАЗ-7403.10', 3, None, None), (48, 'РХБЗ', 'Машина радиационной, химической и биологической разведки', 'РХМ-6', 'КАМАЗ-4308-69 (G5)', '-', 'КамАЗ-7403.10', 7, None, None)]
#
# norms = {}
# for row in rez:
#     for col in nested_cols:
#         if row[col]:
#             norms[(row[0], col)] = row[col]
#
# print(norms.keys())
# print(norms)
# norm_entry_req_rows = list(chain(*[[row[col] for col in nested_cols if row[col]] for row in rez]))
# print(norm_entry_req_rows)
